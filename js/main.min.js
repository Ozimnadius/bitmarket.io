//@prepros-append pages/common.js
//@prepros-append pages/sliders.js
//@prepros-append pages/index.js
//@prepros-append pages/contacts.js
// common.js
function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

const wWidth = $(window).width();

function Timer(timer) {
    this.timer = $(timer);
    this.dayObj = this.timer.find('.timer__item[data-id=days]');
    this.hourObj = this.timer.find('.timer__item[data-id=hours]');
    this.minuteObj = this.timer.find('.timer__item[data-id=minutes]');
    this.secondObj = this.timer.find('.timer__item[data-id=seconds]');
    this.dateEnd = this.timer.data('date');
    this.days = 0;
    this.hours = 0;
    this.minutes = 0;
    this.seconds = 0;

    let that = this;

    this.getTime = function () {
        let dateNow = new Date(),
            dateEnd = new Date(that.dateEnd),
            dateDiff = new Date(dateEnd - dateNow);
        if (dateEnd > dateNow) {
            that.days = dateDiff.getDate();
            that.hours = dateDiff.getHours();
            that.minutes = dateDiff.getMinutes();
            that.seconds = dateDiff.getSeconds();
        }
    };

    this.tick = function () {
        that.getTime();
        that.dayObj.text(that.days);
        that.hourObj.text(that.hours);
        that.minuteObj.text(that.minutes);
        that.secondObj.text(that.seconds);
    };

    this.start = function () {
        let intervalClock = setInterval(that.tick, 1000);
    }
}

if ($('.timer').length > 0) {
    let timer = new Timer('.timer').start();
}
//index.js
$(function () {

    let sliderNewItems = new Swiper ('.new-items .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        navigation: {
            nextEl: '.new-items .slider__next',
            prevEl: '.new-items .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderPopular = new Swiper ('.ipopular .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        slidesPerColumn: 2,
        navigation: {
            nextEl: '.ipopular .slider__next',
            prevEl: '.ipopular .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                slidesPerColumn: 4,
                spaceBetween: 20
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 2,
                slidesPerColumn: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderSale = new Swiper ('.isale .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        navigation: {
            nextEl: '.isale .slider__next',
            prevEl: '.isale .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderBrands = new Swiper ('.ibrands .slider__container', {
        slidesPerView: 5,
        spaceBetween: 30,
        navigation: {
            nextEl: '.ibrands .slider__next',
            prevEl: '.ibrands .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });
});
//index.js
$(function () {

    $('.menu-link').on('click', function (e) {
        e.preventDefault();
        $(this).toggleClass('active');
    });

    $('.menu__more').on('click', function (e) {
        e.stopPropagation();

        let $this = $(this),
            menu = $this.closest('.menu'),
            hidden = menu.find('.menu__hidden');
        $this.toggleClass('open');
        hidden.slideToggle(300);

    });

    let slider = new Swiper ('.ibanner__container', {
        loop: true,
        pagination: {
            el: '.ibanner__pag',
            clickable: true
        }
    });

    $('.menu__link').on('click', function (e) {
        e.stopPropagation();

        if (wWidth<1500) {
            e.preventDefault();
            let $this = $(this),
                item = $this.closest('.menu__item'),
                items = $('.menu__item').not(item);

            items.removeClass('active');
            item.toggleClass('active');
        }
    });

    $('.submenu__item').on('click', function (e) {
        e.stopPropagation();
    });

});
/*YANDEX*/
$(function ()   {
    ymaps.ready(init);
    var myMap,
        myPlacemark;

    function init() {

        if ($('#map').length) {
            var center = [55.78638606974644,37.36114605952451];
            // if ($(window).width() < 576) {
            //     center = [55.609501798660396, 37.61325538360591];
            // }

            myMap = new ymaps.Map("map", {
                center: center,
                zoom: 17,
                controls: ['fullscreenControl']
            });


            myMap.behaviors.disable(['scrollZoom']);

            myPin = new ymaps.GeoObjectCollection({}, {});


            myPlacemark1 = new ymaps.Placemark([55.78618656896549,37.36104949999998], {
                    balloonContentHeader: "Qwertysh",
                    balloonContentBody: "Qwertysh",
                    balloonContentFooter: "г. Москва, ул. 2-я Новорублевская, д.13А",
                    hintContent: "Qwertysh.ru"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/icons/pin.png',
                    iconImageSize: [18, 19],
                    iconImageOffset: [-0, -0]
                });


            myPin.add(myPlacemark1);
            myMap.geoObjects.add(myPin);
        }
    }


    $('.fmap__button').on('click', function (e) {
        myMap.container.enterFullscreen();
    });
});
/*END YANDEX*/

//# sourceMappingURL=main.min.js.map