//@prepros-append pages/common.js
//@prepros-append pages/sliders.js
//@prepros-append pages/index.js
//@prepros-append pages/contacts.js
//@prepros-append pages/filters.js
//@prepros-append pages/product.js
//@prepros-append pages/favorites.js
//@prepros-append pages/compare.js
// common.js
$('input[type=tel]').mask('+7 (999) 999-99-99');

function Switches(prop) {
    this.sws = document.querySelector(prop.sws);
    this.swsList = document.querySelectorAll(prop.sw);
    this.tabs = document.querySelectorAll(prop.tab);
    this.tabSelector = prop.tab;
    this.tabsContainer = document.querySelector(prop.tabsContainer);
    this.activeTab = prop.activeTab || 0;

    let that = this;

    this.init = function () {
        let $this = that.swsList[that.activeTab],
            id = $this.dataset.id,
            maxH = 0,
            tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


        for (let i = 0; i < that.swsList.length; i++) {
            that.swsList[i].classList.remove('active');
        }

        for (let i = 0; i < that.tabs.length; i++) {
            that.tabs[i].classList.remove('active');
            let height = that.tabs[i].offsetHeight;

            if (maxH < height) {
                maxH = height;
            }
        }

        tab.classList.add('active');
        $this.classList.add('active');
        that.tabsContainer.style.height = maxH + 'px';

    };

    for (let i = 0; i < that.swsList.length; i++) {
        that.swsList[i].addEventListener('click', function (e) {

            let percent = (this.offsetLeft / that.width) * 100,
                id = this.dataset.id,
                tab = document.querySelector(that.tabSelector + '[data-id="' + id + '"]');


            for (let i = 0; i < that.swsList.length; i++) {
                that.swsList[i].classList.remove('active');
            }

            for (let i = 0; i < that.tabs.length; i++) {
                that.tabs[i].classList.remove('active');
            }

            tab.classList.add('active');
            this.classList.add('active');

        });
    }
}

function imageResize(src) {
    $('img').not('.logo__img').attr('src', src);
}
// imageResize('https://loremflickr.com/320/440');

function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

const wWidth = $(window).width();

function Timer(timer) {
    this.timer = $(timer);
    this.dayObj = this.timer.find('.timer__item[data-id=days]');
    this.hourObj = this.timer.find('.timer__item[data-id=hours]');
    this.minuteObj = this.timer.find('.timer__item[data-id=minutes]');
    this.secondObj = this.timer.find('.timer__item[data-id=seconds]');
    this.dateEnd = this.timer.data('date');
    this.days = 0;
    this.hours = 0;
    this.minutes = 0;
    this.seconds = 0;

    let that = this;

    this.getTime = function () {
        let dateNow = new Date(),
            dateEnd = new Date(that.dateEnd),
            dateDiff = new Date(dateEnd - dateNow);
        if (dateEnd > dateNow) {
            that.days = dateDiff.getDate();
            that.hours = dateDiff.getHours();
            that.minutes = dateDiff.getMinutes();
            that.seconds = dateDiff.getSeconds();
        }
    };

    this.tick = function () {
        that.getTime();
        that.dayObj.text(that.days);
        that.hourObj.text(that.hours);
        that.minuteObj.text(that.minutes);
        that.secondObj.text(that.seconds);
    };

    this.start = function () {
        let intervalClock = setInterval(that.tick, 1000);
    }
}

if ($('.timer').length > 0) {
    let timer = new Timer('.timer').start();
}


$('.select').selectize();

$('.cnt__btn').on('click', function (e) {
    let btn = $(this),
        cnt = btn.closest('.cnt'),
        count = cnt.find('.cnt__input'),
        val = count.val();
    if (btn.hasClass('cnt__plus')) {
        val++
    } else {
        if (val > 1) {
            val--
        }
    }
    count.val(val);

    if (btn.hasClass('order__cnt-btn')) {
        calcTotal();
    }
});

//-Корзина
let cart = $('.cart'),
    cartCount = cart.find('.cart__count-val'),
    cartPrice = cart.find('.cart__price-val');

$('.oitem__delete').on('click', function (e) {
    $(this).closest('.oitem').remove();
    calcTotal();
});

function calcTotal() {
    let items = $('.oitem'),
        infoCount = $('.oinfo__left .oinfo__val-val'),
        infoPrice = $('.oinfo__right .oinfo__val-val'),
        totalCount = $('.ototal__item_price .ototal__item-val'),
        totalPrice = $('.ototal__price-val'),
        count = 0,
        total = 0;


    items.each(function (x, i) {
        let item = $(i),
            price = Number(item.data('price')),
            num = Number(item.find('.cnt__input').val()),
            sum = price * num;
        count += num;
        total += sum;
    });

    total = number_format(total, '', '', ' ');

    cartCount.text(count);
    cartPrice.text(total);
    infoCount.text(count + ' ');
    infoPrice.text(total);
    totalCount.text(count + ' шт.');
    totalPrice.text(total);

}

$('.file__input').on('change', function (e) {
    let input = $(this),
        val = input.val(),
        item = input.closest('.file'),
        text = item.find('.file__title'),
        file = val.replace(/\\/g, '/').split('/').pop();
    text.text(file);

});

$('.jsItemOne').on('click', function (e) {
    e.preventDefault();
    $('.popup').addClass('active');
});

$('.form__close').on('click', function (e) {
    $('.popup').removeClass('active');
});

$('.jsFormFast').on('submit', function (e) {
    e.preventDefault();
    $(this).find('.form__wrap').html('<div class="form__success">Запрос отправлен.</div>');
});





//index.js
$(function () {

    let sliderNewItems = new Swiper ('.new-items .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        navigation: {
            nextEl: '.new-items .slider__next',
            prevEl: '.new-items .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderPopular = new Swiper ('.ipopular .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        slidesPerColumn: 2,
        navigation: {
            nextEl: '.ipopular .slider__next',
            prevEl: '.ipopular .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                slidesPerColumn: 4,
                spaceBetween: 20
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 2,
                slidesPerColumn: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderSale = new Swiper ('.isale .slider__container', {
        slidesPerView: 4,
        spaceBetween: 30,
        navigation: {
            nextEl: '.isale .slider__next',
            prevEl: '.isale .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderBrands = new Swiper ('.ibrands .slider__container', {
        slidesPerView: 5,
        spaceBetween: 30,
        navigation: {
            nextEl: '.ibrands .slider__next',
            prevEl: '.ibrands .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderBefore = new Swiper ('.before .slider__container', {
        slidesPerView: 5,
        spaceBetween: 30,
        navigation: {
            nextEl: '.before .slider__next',
            prevEl: '.before .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderSame = new Swiper ('.psame .slider__container', {
        slidesPerView: 5,
        spaceBetween: 30,
        navigation: {
            nextEl: '.psame .slider__next',
            prevEl: '.psame .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });

    let sliderReccom = new Swiper ('.oreccom .slider__container', {
        slidesPerView: 5,
        spaceBetween: 30,
        navigation: {
            nextEl: '.oreccom .slider__next',
            prevEl: '.oreccom .slider__prev',
        },
        breakpoints: {
            // when window width is <= 767.99px
            767.99: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            // when window width is <= 1499.99px
            1499.99: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    });
});
//index.js
$(function () {

    $('.menu-link').on('click', function (e) {
        e.preventDefault();
        $(this).toggleClass('active');
    });

    $('.mmenu-btn__btn').on('click', function (e) {
        e.preventDefault();
        $(this).closest('.mmenu-btn').toggleClass('active');
    });
    

    $('.menu__more').on('click', function (e) {
        e.stopPropagation();

        let $this = $(this),
            menu = $this.closest('.menu'),
            hidden = menu.find('.menu__hidden');
        $this.toggleClass('open');
        hidden.slideToggle(300);

    });

    let slider = new Swiper('.ibanner__container', {
        loop: true,
        pagination: {
            el: '.ibanner__pag',
            clickable: true
        }
    });

    $('.menu__link').on('click', function (e) {
        e.stopPropagation();

        if (wWidth < 768) {
            window.location = $(this).attr('href');
        } else if (wWidth < 1500) {
            e.preventDefault();
            let $this = $(this),
                item = $this.closest('.menu__item'),
                items = $('.menu__item').not(item);

            items.removeClass('active');
            item.toggleClass('active');
        }
    });

    $('.submenu__item').on('click', function (e) {
        e.stopPropagation();
    });

});
/*YANDEX*/
$(function ()   {
    ymaps.ready(init);

    var myMap,
        myMap2,
        myPin,
        myPin2,
        myPlacemark,
        myPlacemark2;

    function init() {

        if ($('#map').length) {
            var center = [55.78638606974644,37.36114605952451];
            // if ($(window).width() < 576) {
            //     center = [55.609501798660396, 37.61325538360591];
            // }

            myMap = new ymaps.Map("map", {
                center: center,
                zoom: 17,
                controls: ['fullscreenControl']
            });


            myMap.behaviors.disable(['scrollZoom']);
            if (wWidth<768) {
                myMap.behaviors.disable('drag');
            }

            myPin = new ymaps.GeoObjectCollection({}, {});


            myPlacemark = new ymaps.Placemark([55.78618656896549,37.36104949999998], {
                    balloonContentHeader: "Qwertysh",
                    balloonContentBody: "Qwertysh",
                    balloonContentFooter: "г. Москва, ул. 2-я Новорублевская, д.13А",
                    hintContent: "Qwertysh.ru"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/icons/pin.png',
                    iconImageSize: [18, 19],
                    iconImageOffset: [-0, -0]
                });


            myPin.add(myPlacemark);
            myMap.geoObjects.add(myPin);
        }

        if ($('#map2').length) {
            var center2 = [55.78638606974644,37.36114605952451];
            // if ($(window).width() < 576) {
            //     center = [55.609501798660396, 37.61325538360591];
            // }

            myMap2 = new ymaps.Map("map2", {
                center: center2,
                zoom: 17,
                controls: ['fullscreenControl']
            });


            myMap2.behaviors.disable(['scrollZoom']);
            if (wWidth<768) {
                myMap2.behaviors.disable('drag');
            }

            myPin2 = new ymaps.GeoObjectCollection({}, {});


            myPlacemark2 = new ymaps.Placemark([55.78618656896549,37.36104949999998], {
                    balloonContentHeader: "Qwertysh",
                    balloonContentBody: "Qwertysh",
                    balloonContentFooter: "г. Москва, ул. 2-я Новорублевская, д.13А",
                    hintContent: "Qwertysh.ru"
                },
                {
                    iconLayout: 'default#image',
                    iconImageHref: 'images/icons/pin.svg',
                    iconImageSize: [137, 48],
                    iconImageOffset: [-70, -25]
                });


            myPin2.add(myPlacemark2);
            myMap2.geoObjects.add(myPin2);
        }
    }



    $('.fmap__button').on('click', function (e) {
        myMap.container.enterFullscreen();
    });
});
/*END YANDEX*/
//filters.js
$(function () {
    $('.list__form').on('submit', function (e) {
        e.preventDefault();
    });

    $('.filter__input').on('keypress', function (e) {
        if (e.key.match(/[^0-9]/g) || (this.value == 0 && e.key == 0)) {
            e.preventDefault();
        }

    });

    $('.filter__more').on('click', function (e) {
        let $this = $(this),
            filter = $this.closest('.filter'),
            hidden = filter.find('.filter__hidden');
        $this.toggleClass('open');
        hidden.slideToggle(300);
    });


    //ОБРАБОТЧИКИ ФОРМЫ
    //обработчик изменения фильтров
    $('.filters').on('change', function (e) {

    });

    // обработчик сброса фильтров
    $('.filters__reset').on('click', function (e) {
        $(this).find(':input').not(':button, :submit, :reset, :hidden').val('').removeAttr('checked');
    });

    $('.filters-btn').on('click',function (e) {
        $(this).next().toggleClass('active');
    });
});
//product.js
$(function () {
    let sliderProduct = new Swiper ('.product__container', {
        slidesPerView: 1,
        loop: true,
        navigation: {
            nextEl: '.product__slider-next',
            prevEl: '.product__slider-prev',
        },
    });

    if (document.querySelector('.product__sws')) {
        let subSwitches = new Switches({
            sws: '.product__sws',
            sw: '.product__sw',
            tab: '.product__tab',
            tabsContainer: '.product__tabs'
        }).init();
    }

    $('.pacco__btn').on('click', function (e) {
        let btn = $(this),
            wrap = btn.next(),
            btns = $('.pacco__btn').not(btn),
            wraps = $('.pacco__wrapper').not(wrap);

        btns.removeClass('active');
        btn.toggleClass('active');
        wraps.slideUp(300);
        wrap.slideToggle(300);
    });

});
//favorites.js
$(function () {

    function calcFavorites(list) {
        let items = list.find('.fitem'),
            price = list.find('.flist__price-val'),
            total = 0;

        items.each(function (x,i) {
            let item = $(i),
                val = Number(item.data('price'));
            total+=val;
        });

        total = number_format(total,'','','.');
        price.text(total);
    }

    $('.fitem__delete').on('click', function (e) {
        let $this = $(this),
            item = $this.closest('.fitem'),
            list = item.closest('.flist');

        item.remove();
        calcFavorites(list);
    });


});
//compare.js
$(function () {
    $('.cchars__top').on('click', function (e) {
        let $this = $(this),
            btn = $this.find('.cchars__btn'),
            chars = btn.closest('.cchars'),
            bottom = chars.find('.cchars__bottom'),
            height = bottom.find('.cchars__wrap').outerHeight();

        if (bottom.css('height') == '0px') {
            bottom.animate({
                height: height
            }, 300);
        } else {
            bottom.animate({
                height: 0
            }, 300);
        }

        btn.toggleClass('open');

    });

    $('.compare__switch-btn').on('click', function (e) {
        let btn = $(this),
            items = $('.same'),
            chars = $('.cchars');

        items.toggleClass('disabled');
        btn.toggleClass('active');
        chars.each(function (x, i) {
            let $this = $(i),
                bottom = $this.find('.cchars__bottom'),
                height = bottom.find('.cchars__wrap').outerHeight();
            if (bottom.css('height') != '0px') {
                bottom.css({
                    height: height
                });
            }
        });




    });

    var sliderCompare = new Swiper('.cslider__container', {
        spaceBetween: 20,
        pagination: {
            el: '.cslider__pag',
            type: 'fraction',
        },
        navigation: {
            nextEl: '.cslider__next',
            prevEl: '.cslider__prev',
        },
    });
});

//# sourceMappingURL=main.min.js.map